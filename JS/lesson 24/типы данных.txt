

//---------------------Методы чисел------------------------------------

// 1.  toString(base)
// Метод num.toString(base) возвращает строковое представление числа num в системе счисления base.

// Например:

// let num = 255;

// alert( num.toString(16) );  // ff
// alert( num.toString(2) );   // 11111111

// 2. Округление
// Одна из часто используемых операций при работе с числами – это округление.

// В JavaScript есть несколько встроенных функций для работы с округлением:

// Math.floor
// Округление в меньшую сторону: 3.1 становится 3, а -1.1 — -2.
// Math.ceil
// Округление в большую сторону: 3.1 становится 4, а -1.1 — -1.
// Math.round
// Округление до ближайшего целого: 3.1 становится 3, 3.6 — 4, а -1.1 — -1.
// Math.trunc (не поддерживается в Internet Explorer)
// Производит удаление дробной части без округления: 3.1 становится 3, а -1.1 — -1.

// Math.random()
// Возвращает псевдослучайное число в диапазоне от 0 (включительно) до 1 (но не включая 1)

// alert( Math.random() ); // 0.1234567894322
// alert( Math.random() ); // 0.5435252343232
// alert( Math.random() ); // ... (любое количество псевдослучайных чисел)
// Math.max(a, b, c...) / Math.min(a, b, c...)
// Возвращает наибольшее/наименьшее число из перечисленных аргументов.

// alert( Math.max(3, 5, -10, 0, 1) ); // 5
// alert( Math.min(1, 2) ); // 1
// Math.pow(n, power)
// Возвращает число n, возведённое в степень power

// alert( Math.pow(2, 10) ); // 2 в степени 10 = 1024
// В объекте Math есть множество функций и констант, включая тригонометрические функции, 
// подробнее можно ознакомиться в документации по объекту Math.

// Итого
// Чтобы писать числа с большим количеством нулей:

// Используйте краткую форму записи чисел – "e", с указанным количеством нулей. Например: 123e6 это 123 с 6-ю нулями 123000000.
// Отрицательное число после "e" приводит к делению числа на 1 с указанным количеством нулей. Например: 123e-6 это 0.000123 (123 миллионных).
// Для других систем счисления:

// Можно записывать числа сразу в шестнадцатеричной (0x), восьмеричной (0o) и бинарной (0b) системах счисления
// parseInt(str, base) преобразует строку в целое число в соответствии с указанной системой счисления: 2 ≤ base ≤ 36.
// num.toString(base) представляет число в строковом виде в указанной системе счисления base.
// Для преобразования значений типа 12pt и 100px в число:

// Используйте parseInt/parseFloat для «мягкого» преобразования строки в число, данные функции по порядку 
// считывают число из строки до тех пор пока не возникнет ошибка.
// Для дробей:

// Используйте округления Math.floor, Math.ceil, Math.trunc, Math.round или num.toFixed(precision).
// Помните, что при работе с дробями происходит потеря точности.